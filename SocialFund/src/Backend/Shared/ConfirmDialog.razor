<div class="modal" tabindex="-1" style="display: @(IsVisible ? "block" : "none");">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">@Title</h5>
                <button type="button" class="btn-close" @onclick="CloseDialog"></button>
            </div>
            <div class="modal-body">
                <p>@Message</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" @onclick="Cancel">Cancel</button>
                <button type="button" class="btn btn-primary" @onclick="Confirm">Confirm</button>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter] public string Title { get; set; } = "Confirm";
    [Parameter] public string Message { get; set; } = "Are you sure?";
    [Parameter] public EventCallback<bool> OnClose { get; set; }

    private bool IsVisible { get; set; } = false;
    private TaskCompletionSource<bool>? tcs;

    public void Show() => IsVisible = true;
    public void Hide() => IsVisible = false;

    public Task<bool> ShowAsync()
    {
        tcs = new TaskCompletionSource<bool>();
        Show();
        return tcs.Task;
    }

    private async Task Confirm()
    {
        tcs?.SetResult(true);
        await OnClose.InvokeAsync(true);
        Hide();
    }

    private async Task Cancel()
    {
        tcs?.SetResult(false);
        await OnClose.InvokeAsync(false);
        Hide();
    }

    private void CloseDialog()
    {
        Hide();
    }
}